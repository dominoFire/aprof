== Aprof on ARM/PPC architecture ==

Aprof use the same logic of callgrind for predict/tracing function entry/exit points so if you are on ARM/PPC architecture, aprof does not work correctly. 

Anyway you can use aprof with [http://gcc.gnu.org/onlinedocs/gcc-4.4.2/gcc/Code-Gen-Options.html#index-finstrument_002dfunctions-1976 GCC instrumentation]. You need to recompile your program or any libs you want to correctly profiling. Any function not instrumentated by GCC is ignored by aprof. 

== Instrument your code with GCC ==
Check out from our svn the code invoked by GCC when a function starts or returns:
{{{
svn co http://aprof.googlecode.com/svn/trunk/gcc-instrument/ gcc-instrument
}}}

Now you need to recompile your program (or any libs of your interest):
{{{
gcc -Wall your_code.c gcc-instrument/instr-gcc.c -finstrument-functions -o your_prog
}}}
Of course if your program/lib use a makefile, you have to modify it in a similarly way.

*EXPLAIN HOW TO DISABLE INTERNAL FUNCTION TRACING IN APROF*